/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package me.akainth.tape

import kotlin.test.Test
import org.gradle.testkit.runner.GradleRunner
import org.junit.Rule
import org.junit.rules.TemporaryFolder

/**
 * A simple functional test for the 'me.akainth.tape.greeting' plugin.
 */
class TapePluginFunctionalTest {
    @get:Rule val tempFolder = TemporaryFolder()

    private fun getProjectDir() = tempFolder.root
    private fun getBuildFile() = getProjectDir().resolve("build.gradle.kts")
    private fun getSettingsFile() = getProjectDir().resolve("settings.gradle.kts")

    @Test fun `can generate the length dimension`() {
        // Set up the test build
        getSettingsFile().writeText("")
        getBuildFile().writeText("""
plugins {
    id("me.akainth.tape")
}

tape {
    length
}
""")

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("tape")
        runner.withProjectDir(getProjectDir())
        runner.build()
    }

    @Test fun `can generate the time dimension`() {
        // Set up the test build
        getSettingsFile().writeText("")
        getBuildFile().writeText("""
plugins {
    id("me.akainth.tape")
}

tape {
    time
}
""")

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("tape")
        runner.withProjectDir(getProjectDir())
        runner.build()
    }

    @Test fun `can generate speed`() {
        // Set up the test build
        getSettingsFile().writeText("")
        getBuildFile().writeText("""
plugins {
    id("me.akainth.tape")
}

tape {
    length
    time
}
""")

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
        runner.withArguments("tape")
        runner.withProjectDir(getProjectDir())
        runner.build()
    }
}
